import tkinter as tk
from tkinter import messagebox
import random
import string

def generate_password(length, options):
    if length < 6:  # Minimum length check for security reasons
        print("Password length should be at least 6 characters.")
        return None

    # Building the character set based on user preferences
    characters = ''
    if options['include_uppercase']:
        characters += string.ascii_uppercase
    if options['include_lowercase']:
        characters += string.ascii_lowercase
    if options['include_digits']:
        characters += string.digits
    if options['include_special']:
        characters += string.punctuation

    # Check if the user has selected at least one character type
    if not characters:
        print("Please select at least one type of character for your password.")
        return None

    # Ensuring the password meets complexity requirements
    while True:
        password = ''.join(random.choice(characters) for i in range(length))
        if (any(c.islower() for c in password) or not options['include_lowercase']) and \
           (any(c.isupper() for c in password) or not options['include_uppercase']) and \
           (any(c.isdigit() for c in password) or not options['include_digits']) and \
           (any(c in string.punctuation for c in password) or not options['include_special']):
            break  # The password is valid
        else:
            continue  # Regenerate if the password doesn't meet the criteria

    return password

def main():
    try:
        length = int(input("Enter the desired length of the password (min 6 characters): "))
        options = {
            'include_uppercase': bool(int(input("Include uppercase letters? 1 for Yes, 0 for No: "))),
            'include_lowercase': bool(int(input("Include lowercase letters? 1 for Yes, 0 for No: "))),
            'include_digits': bool(int(input("Include digits? 1 for Yes, 0 for No: "))),
            'include_special': bool(int(input("Include special characters? 1 for Yes, 0 for No: ")))
        }
        password = generate_password(length, options)
        if password:
            print("Generated Password:", password)
    except ValueError:
        print("Please enter valid inputs.")

if __name__ == "__main__":
    main()
